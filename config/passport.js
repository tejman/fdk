// Generated by CoffeeScript 1.7.1
(function() {
  var GoogleStrategy, UserModel, googleAuth, googleStrategy, passport;

  passport = require("passport");

  GoogleStrategy = require("passport-google-oauth").OAuth2Strategy;

  UserModel = require("../models/userModel");

  passport.serializeUser(function(user, done) {
    return done(null, user._id);
  });

  passport.deserializeUser(function(id, done) {
    return UserModel.findById(id, function(err, user) {
      return done(err, user);
    });
  });

  googleAuth = {
    clientID: global.process.env.GOOGLE_CLIENT_ID,
    clientSecret: global.process.env.GOOGLE_CLIENT_SECRET,
    callbackURL: global.process.env.GOOGLE_CALLBACK_URL
  };

  googleStrategy = new GoogleStrategy(googleAuth, function(accessToken, refreshToken, profile, done) {
    console.log(accessToken, refreshToken, profile);
    return process.nextTick(function() {
      return UserModel.findOne({
        userid: profile.id
      }, function(err, user) {
        var newUser;
        if (err) {
          return done(err);
        }
        if (user) {
          return done(null, user);
        }
        newUser = new UserModel({
          userid: profile.id,
          name: profile.displayName,
          profile: profile
        });
        return newUser.save(function(err) {
          if (err) {
            throw err;
          }
          return done(null, newUser);
        });
      });
    });
  });

  passport.use(googleStrategy);

}).call(this);
